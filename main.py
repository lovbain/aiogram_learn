from aiogram import Bot, Dispatcher
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
import asyncio
from aiogram import F
from aiogram.filters import CommandStart

from core.keyboards.inline import select_psych
from core.utils.commands import set_commands
from core.keyboards.reply import keyboard_1, adm
from core.handlers import form, second_form, th_form
from core.utils.statesform import StepsForm, StepsForm2, StepsForm3
from index import ADMIN_ID, TOKEN


async def get_start(message: Message, bot: Bot, state: FSMContext):
    await state.clear()
    await bot.send_message(message.from_user.id,
                           f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!  üëã\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è üëá",
                           reply_markup=adm)


async def vopros(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, "–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å?",
                           reply_markup=keyboard_1)


async def nazad1(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(f"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üßë‚Äçüíª", reply_markup=adm)


async def start_bot(bot: Bot):
    await set_commands(bot)
    await bot.send_message(ADMIN_ID, text="–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")


async def stop_bot(bot: Bot):
    await bot.send_message(ADMIN_ID, text="–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


async def kanal(message: Message, bot: Bot):
    await message.answer('https://t.me/psy_fmsh!', reply_markup=adm)


async def vibor(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, '–ö –∫–∞–∫–æ–º—É –ø—Å–∏—Ö–æ–ª–æ–≥—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é?',
                           reply_markup=select_psych)
    await message.answer(f"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üßë‚Äçüíª", reply_markup=adm)


async def start():
    bot = Bot(token=TOKEN)
    dp = Dispatcher()
    dp.startup.register(start_bot)
    dp.shutdown.register(stop_bot)
    dp.message.register(get_start, CommandStart())
    dp.message.register(kanal, F.text == '–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª üôÇ')
    dp.message.register(vibor, F.text == '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é üìù')
    dp.message.register(vopros, F.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø—Å–∏—Ö–æ–ª–æ–≥—É üôã‚Äç‚ôÇÔ∏è')
    dp.message.register(nazad1, F.text == "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è")
    dp.message.register(second_form.get_second_form, F.text == "–ê–Ω–æ–Ω–∏–º–Ω–æ üôà")
    dp.message.register(form.get_form, F.text == "–ù–µ –∞–Ω–æ–Ω–∏–º–Ω–æ üêµ")
    dp.message.register(th_form.get_th, F.text == "–í–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ü§ù")
    dp.message.register(th_form.get_th_form, StepsForm3.PREDLOG)
    dp.message.register(th_form.get_num, StepsForm3.GET_NUM)
    dp.message.register(form.get_name, StepsForm.GET_NAME)
    dp.message.register(form.get_classs, StepsForm.GET_CLASSS)
    dp.message.register(form.get_number, StepsForm.GET_NUMBER)
    dp.message.register(form.get_age, StepsForm.GET_AGE)
    dp.message.register(form.get_vopros, StepsForm.GET_VOPROS)
    dp.message.register(form.get_psyh, StepsForm.GET_PSYH)
    dp.message.register(second_form.get_second_vopros, StepsForm2.VOPROS)
    dp.message.register(second_form.get_psyh, StepsForm2.GET_PSYH)
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(start())
